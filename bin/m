#!/bin/bash

VERSION="0.3.0"
DIR=/tmp/m-mon
PIDS=$DIR/pids
LOGS=$DIR/logs
SCRIPT=$0

log() {
  echo -e "  \e[33m$@\e[39m"
}

main() {

  if [[ ! -d $DIR ]]; then
    mkdir -p $DIR
    mkdir -p $PIDS
    mkdir -p $LOGS
  fi

  if [ "$#" == 0 ]; then
    exec $SCRIPT ps
    exit
  fi
  while test $# -ne 0; do
    local cmd=$1
    shift

    local app=$@
    case $cmd in
      start)
        local name=$1
        shift
        local exe=$@

        local pidfile=$PIDS/$name.pid
        if [[ -f $pidfile ]]; then
          local pid=$(cat $pidfile)
          kill -0 $pid 2> /dev/null
          if [ $? -eq 0 ]; then
            log "$app is already running"
            exit
          fi
        fi
        mon -d -l $LOGS/$name.log -p $PIDS/$name.pid -m $PIDS/$name.mon.pid "$exe"
        log "$name started"
        sleep 1
        log "tailing logs (ctrl-c will keep app running)"
        exec $SCRIPT tailf $name
        exit
        ;;
      restart)
        kill -s SIGTERM $(cat $PIDS/$app.pid) 2> /dev/null
        log "$app restarted"
        log "tailing logs (ctrl-c will keep app running)"
        exec $SCRIPT tailf $app
        exit
        ;;
      status)
        if [[ -f $PIDS/$app.pid ]]; then
          log $(mon --pidfile $PIDS/$app.pid --status)
        else
          log "$app not running"
        fi
        exit
        ;;
      stop)
        kill -s SIGQUIT $(cat $PIDS/$app.mon.pid) 2> /dev/null
        rm $PIDS/$app.mon.pid
        rm $PIDS/$app.pid
        log "$app stopped"
        exit
        ;;
      tail)
        tail -n 100 $LOGS/$app.log
        exit
        ;;
      tailf)
        tail -f $LOGS/$app.log
        exit
        ;;
      ps)
        log "listing apps"
        ls -v $PIDS
        exit
        ;;
    esac
  done
}
main $@
